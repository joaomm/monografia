Comentários sobre as métricas da Versão 1

Características:
	Olhando para a classe toda:
		- Alto número de linhas dos métodos
		- Alto número de métodos
		- Alta média de complexidade (avg_cc=wmc)
		- Alto avg_nec
		- avg_nra - NAU = 0.2 (pequeno)
		- A média de parâmetros é 1.78 (em Perl sempre temos um argumento quando usamos OO) 
			-> Ou seja, os métodos geralmente recebem 0 ou 1 parâmetro
	
	Olhando para os métodos de maneira geral:
		- Alto NEC para a maioria das classes
		- Alto ECR
		- A maioria não possui muitas linhas de código, mas são bastante complexos (alto CC e MAXNESTING)
	
	Olhando para report:
		- Método extremamente complexo
			- Muitas linhas de código
			- Altíssima CC
			
Interpretações:
	Olhando para report:
		- Método Grande!
			- Precisa ser quebrado em métodos menores -> Composição de Métodos
	
	Olhando para os métodos de métricas:
		- Métodos com muitos Fluxos
			- Sua alta complexidade ciclomática e maxnesting poderia ser quebrada
			
	Olhando para a classe:
		- 1 parâmetro sempre é passado, mas logo é consumido pela função

    Olhando para _report_modules:
        - Método Grande
            - Muitas linhas de código e muitas chamadas para outros métodos
    

Ideias de Mudanças:
	1 - Quebrar os métodos -> Composição de Métodos
	2 - A classe está bastante complexa
		- Muitas tarefas = muitos métodos
		- Tarefas complexas = alto wcm=sum_cc
		-> Precisa ser quebrada em outras classes
	3 - O método list_of_metrics não é utilizado por ninguém -> Não precisaria estar aqui
	4 - O grande valor de NEC dos métodos mostra que essas operações provavelmente são todas pertencentes ao modelo. A classe que reporta dados não deveria ser responsável pelo cálculo das métricas.
	
	Passo:
		Quebrar os métodos
	